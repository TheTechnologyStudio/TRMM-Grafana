{
annotations: {
list: [
{
builtIn: 1,
datasource: {
type: "datasource",
uid: "grafana"
},
enable: true,
hide: true,
iconColor: "rgba(0, 211, 255, 1)",
name: "Annotations & Alerts",
target: {
limit: 100,
matchAny: false,
tags: [ ],
type: "dashboard"
},
type: "dashboard"
}
]
},
editable: true,
fiscalYearStartMonth: 0,
graphTooltip: 0,
id: 3,
iteration: 1655321446387,
links: [
{
asDropdown: false,
icon: "external link",
includeVars: true,
keepTime: false,
tags: [
"TRMMClientOverview"
],
targetBlank: false,
title: "T-RMM Client Overview",
tooltip: "",
type: "dashboards",
url: ""
},
{
asDropdown: false,
icon: "external link",
includeVars: true,
keepTime: false,
tags: [
"TRMMClientMap"
],
targetBlank: false,
title: "T-RMM Client Map",
tooltip: "",
type: "dashboards",
url: ""
}
],
liveNow: false,
panels: [
{
collapsed: false,
datasource: {
type: "postgres",
uid: "${Tactical}"
},
gridPos: {
h: 1,
w: 24,
x: 0,
y: 0
},
id: 49,
panels: [ ],
title: "Information of the selected agent",
type: "row"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "green"
},
{
color: "red",
value: 80
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 1,
w: 24,
x: 0,
y: 1
},
id: 57,
options: {
colorMode: "none",
graphMode: "none",
justifyMode: "auto",
orientation: "auto",
reduceOptions: {
calcs: [
"lastNotNull"
],
fields: "/.*/",
values: true
},
text: {
valueSize: 18
},
textMode: "value"
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "select 
  concat('Site: ',clients_site.name,' / HostName: ', agents_agent.hostname,' ',agents_agent.DESCRIPTION)
from 
  agents_agent
  LEFT OUTER JOIN clients_site on agents_agent.site_id = clients_site.id
  where 
    agents_agent.agent_id = '$Agent'",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
type: "stat"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [
{
options: {
Connected: {
color: "dark-green",
index: 1
},
No Connected: {
color: "dark-red",
index: 0
}
},
type: "value"
},
{
options: {
match: "null",
result: {
color: "transparent",
index: 2
}
},
type: "special"
}
],
thresholds: {
mode: "absolute",
steps: [
{
color: "transparent"
},
{
color: "red",
value: 80
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 2,
w: 2,
x: 0,
y: 2
},
id: 53,
options: {
colorMode: "background",
graphMode: "area",
justifyMode: "auto",
orientation: "auto",
reduceOptions: {
calcs: [ ],
fields: "/.*/",
values: false
},
text: {
valueSize: 18
},
textMode: "value"
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "select   
CASE
  WHEN (count(*) = 1) THEN 'Connected'
  WHEN (count(*) = 0) THEN 'Not Connected'
  ELSE ''
 END AS modifiedpvc
  
 from 
  agents_agent
 where 
   agents_agent.agent_id = '$Agent'  and
   last_seen > NOW()- interval '1 hours'
 ",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
type: "stat"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "text"
},
{
color: "red",
value: 80
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 2,
w: 3,
x: 2,
y: 2
},
id: 63,
options: {
colorMode: "value",
graphMode: "area",
justifyMode: "auto",
orientation: "auto",
reduceOptions: {
calcs: [
"lastNotNull"
],
fields: "/^concat$/",
values: false
},
text: {
titleSize: 16,
valueSize: 14
},
textMode: "auto"
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT 
  concat(
          to_char(now() - to_timestamp(boot_time) ,'DD' ),' Days ', 
          to_char(now() - to_timestamp(boot_time),'HH24' ), ' Hours ',
          to_char(now() - to_timestamp(boot_time),'MI' ), ' Minutes '
        )
From 
  agents_agent
Where
  agents_agent.agent_id = '$Agent'",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Uptime",
type: "stat"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "Track CPU consumption for the selected agent.",
fieldConfig: {
defaults: {
color: {
mode: "palette-classic"
},
custom: {
axisLabel: "",
axisPlacement: "auto",
barAlignment: 0,
drawStyle: "line",
fillOpacity: 0,
gradientMode: "none",
hideFrom: {
legend: false,
tooltip: false,
viz: false
},
lineInterpolation: "smooth",
lineStyle: {
fill: "solid"
},
lineWidth: 1,
pointSize: 5,
scaleDistribution: {
log: 10,
type: "log"
},
showPoints: "always",
spanNulls: false,
stacking: {
group: "A",
mode: "normal"
},
thresholdsStyle: {
mode: "line+area"
}
},
mappings: [ ],
thresholds: {
mode: "percentage",
steps: [
{
color: "green"
},
{
color: "#EAB839",
value: 70
},
{
color: "dark-red",
value: 90
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 11,
w: 7,
x: 5,
y: 2
},
id: 28,
options: {
legend: {
calcs: [ ],
displayMode: "hidden",
placement: "bottom"
},
tooltip: {
mode: "multi",
sort: "none"
}
},
pluginVersion: "8.0.3",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "time_series",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT 
  x AS "time",
  y as "CPU Load"
  FROM checks_checkhistory, checks_check, agents_agent
  WHERE checks_checkhistory.agent_id=agents_agent.agent_id AND checks_checkhistory.check_id=checks_check.id
    AND agents_agent.agent_id='$Agent' AND checks_check.check_type='cpuload'
    AND x BETWEEN $__timeFrom() and $__timeTo()
  ORDER BY x",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "CPU Load",
type: "timeseries"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "Track memory consumption for the selected agent.",
fieldConfig: {
defaults: {
color: {
mode: "palette-classic"
},
custom: {
axisLabel: "",
axisPlacement: "auto",
barAlignment: 0,
drawStyle: "line",
fillOpacity: 0,
gradientMode: "hue",
hideFrom: {
legend: false,
tooltip: false,
viz: false
},
lineInterpolation: "smooth",
lineWidth: 1,
pointSize: 5,
scaleDistribution: {
log: 10,
type: "log"
},
showPoints: "auto",
spanNulls: false,
stacking: {
group: "A",
mode: "none"
},
thresholdsStyle: {
mode: "line+area"
}
},
mappings: [ ],
thresholds: {
mode: "percentage",
steps: [
{
color: "green"
},
{
color: "dark-orange",
value: 70
},
{
color: "dark-red",
value: 85
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 11,
w: 6,
x: 12,
y: 2
},
id: 29,
options: {
legend: {
calcs: [ ],
displayMode: "hidden",
placement: "bottom"
},
tooltip: {
mode: "multi",
sort: "none"
}
},
pluginVersion: "8.0.3",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "time_series",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT 
  x AS "time",
  y as "Memory Usage"
  FROM checks_checkhistory, checks_check, agents_agent
  WHERE checks_checkhistory.agent_id=agents_agent.agent_id AND checks_checkhistory.check_id=checks_check.id
    AND agents_agent.agent_id='$Agent' AND checks_check.check_type='memory'
    AND x BETWEEN $__timeFrom() and $__timeTo()
  ORDER BY x
",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Memory Usage",
type: "timeseries"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "Track disk consumption for the selected agent.",
fieldConfig: {
defaults: {
color: {
mode: "palette-classic"
},
custom: {
axisLabel: "",
axisPlacement: "auto",
barAlignment: 0,
drawStyle: "line",
fillOpacity: 0,
gradientMode: "hue",
hideFrom: {
legend: false,
tooltip: false,
viz: false
},
lineInterpolation: "smooth",
lineStyle: {
fill: "solid"
},
lineWidth: 1,
pointSize: 5,
scaleDistribution: {
type: "linear"
},
showPoints: "auto",
spanNulls: false,
stacking: {
group: "A",
mode: "none"
},
thresholdsStyle: {
mode: "line+area"
}
},
mappings: [ ],
thresholds: {
mode: "percentage",
steps: [
{
color: "green"
},
{
color: "dark-red",
value: 0.5
},
{
color: "dark-orange",
value: 10
},
{
color: "green",
value: 11
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 11,
w: 6,
x: 18,
y: 2
},
id: 30,
options: {
legend: {
calcs: [ ],
displayMode: "hidden",
placement: "bottom"
},
tooltip: {
mode: "multi",
sort: "none"
}
},
pluginVersion: "8.0.3",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "time_series",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT 
  x AS "time",
  y as "Disk Usage"
  FROM checks_checkhistory, checks_check, agents_agent
  WHERE checks_checkhistory.agent_id=agents_agent.agent_id AND checks_checkhistory.check_id=checks_check.id
    AND agents_agent.agent_id='$Agent' AND checks_check.check_type='diskspace'
    AND x BETWEEN $__timeFrom() and $__timeTo()
  ORDER BY x
",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Drive Usage",
type: "timeseries"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "Type of CPU installed",
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [
{
options: {
match: "null",
result: {
index: 0,
text: "N/A"
}
},
type: "special"
}
],
thresholds: {
mode: "absolute",
steps: [
{
color: "text"
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 2,
w: 5,
x: 0,
y: 4
},
id: 50,
options: {
colorMode: "value",
graphMode: "area",
justifyMode: "auto",
orientation: "auto",
reduceOptions: {
calcs: [ ],
fields: "/^concat$/",
values: true
},
text: {
valueSize: 14
},
textMode: "auto"
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "select  
  wmi_detail,
  CASE 
    WHEN wmi_detail->'cpu' IS NOT NULL
    THEN concat(wmi_detail->'cpu'->0->0->>'Name',' \ ',wmi_detail->'base_board'->0->0->>'Manufacturer')
    ELSE concat(wmi_detail->'cpus'->>0)
  END
from 
  agents_agent
where 
   agents_agent.agent_id = '$Agent'",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "CPU Model",
type: "stat"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "",
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "text"
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 2,
w: 3,
x: 0,
y: 6
},
id: 44,
options: {
colorMode: "value",
graphMode: "none",
justifyMode: "center",
orientation: "auto",
reduceOptions: {
calcs: [
"lastNotNull"
],
fields: "/^substring$/",
values: true
},
text: {
valueSize: 16
},
textMode: "value"
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "select   
SUBSTRING(agents_agent.operating_system,'(.*)(?:,|x86_64)')
  
from 
  agents_agent
where 
     agents_agent.agent_id = '$Agent'",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Operating System",
type: "stat"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [
{
options: {
Windows not up to date: {
color: "dark-red",
index: 0
},
Windows up to date: {
color: "dark-green",
index: 1
}
},
type: "value"
}
],
thresholds: {
mode: "absolute",
steps: [
{
color: "green"
},
{
color: "red",
value: 80
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 1,
w: 2,
x: 3,
y: 6
},
id: 59,
options: {
colorMode: "background",
graphMode: "area",
justifyMode: "auto",
orientation: "auto",
reduceOptions: {
calcs: [ ],
fields: "/^status$/",
values: true
},
text: {
valueSize: 14
},
textMode: "value"
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT 
	CASE
		WHEN (COUNT(installed)>0) THEN 'Windows not up to date'
		WHEN (COUNT(installed)=0) THEN 'Windows up to date'
	ELSE 'nothing'
	END AS Status
	FROM winupdate_winupdate,agents_agent
	WHERE winupdate_winupdate.agent_id=agents_agent.id
		AND installed='f'
		AND agents_agent.agent_id='$Agent'",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
type: "stat"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [
{
options: {
No reboot required: {
color: "dark-green",
index: 1
},
Reboot required: {
color: "dark-red",
index: 0
}
},
type: "value"
}
],
thresholds: {
mode: "absolute",
steps: [
{
color: "green"
},
{
color: "red",
value: 80
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 1,
w: 2,
x: 3,
y: 7
},
id: 61,
options: {
colorMode: "background",
graphMode: "area",
justifyMode: "auto",
orientation: "auto",
reduceOptions: {
calcs: [ ],
fields: "/^status$/",
values: true
},
text: {
valueSize: 14
},
textMode: "value"
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "select
  CASE
   WHEN (agents_agent.needs_reboot = true) THEN 'Reboot required'
    WHEN (agents_agent.needs_reboot = false) THEN 'No reboot required'
  ELSE 'nothing'
 END AS  Status
From 
  agents_agent
Where
  agents_agent.agent_id = '$Agent'
",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
type: "stat"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "Total Agent Memory",
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "text"
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 2,
w: 2,
x: 0,
y: 8
},
id: 39,
options: {
colorMode: "value",
graphMode: "none",
justifyMode: "center",
orientation: "auto",
reduceOptions: {
calcs: [
"lastNotNull"
],
fields: "/.*/",
values: true
},
text: { },
textMode: "value"
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "select   
   concat((total_ram),'GB / ',concat(wmi_detail->'mem'->0->0->>'Speed','MHz'))
  
from 
  agents_agent
where 
  agents_agent.agent_id = '$Agent'",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "System Ram",
type: "stat"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "Total free disk space",
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
custom: {
align: "auto",
displayMode: "auto",
inspect: false
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "text"
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 5,
w: 3,
x: 2,
y: 8
},
id: 43,
options: {
footer: {
fields: "",
reducer: [
"sum"
],
show: false
},
showHeader: false
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "select 
  concat(items.device,'\ ', items.free,' free on ',items.total)
from 
  agents_agent,
  jsonb_to_recordset(disks) as items(device text, free text, total text)
Where
  agents_agent.agent_id = '$Agent'",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Available Disk Space",
type: "table"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "",
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [ ],
thresholds: {
mode: "percentage",
steps: [
{
color: "dark-green"
},
{
color: "#EAB839",
value: 70
},
{
color: "dark-red",
value: 85
}
]
},
unit: "percent"
},
overrides: [ ]
},
gridPos: {
h: 3,
w: 2,
x: 0,
y: 10
},
id: 45,
options: {
orientation: "auto",
reduceOptions: {
calcs: [ ],
fields: "/^Occupation$/",
values: false
},
showThresholdLabels: true,
showThresholdMarkers: true,
text: { }
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "select
  disks->0->>'percent' as "Occupation"
from 
  agents_agent
where 
  agents_agent.agent_id = '$Agent'
",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
type: "gauge"
},
{
collapsed: false,
datasource: {
type: "postgres",
uid: "${Tactical}"
},
gridPos: {
h: 1,
w: 24,
x: 0,
y: 13
},
id: 47,
panels: [ ],
title: "Information on Client or selected site",
type: "row"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "Agents at selected clients/sites",
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "green"
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 3,
w: 2,
x: 0,
y: 14
},
id: 31,
options: {
colorMode: "none",
graphMode: "none",
justifyMode: "center",
orientation: "auto",
reduceOptions: {
calcs: [
"lastNotNull"
],
fields: "",
values: false
},
text: {
valueSize: 48
},
textMode: "auto"
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT
  count(*)
FROM agents_agent
where 
  site_id IN (SELECT id FROM clients_site WHERE site_id IN (SELECT id FROM clients_site WHERE name IN ($Sites))) and
  site_id IN (SELECT id FROM clients_site WHERE client_id IN (SELECT id FROM clients_client WHERE name IN ($Client)))
ORDER BY 1",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Agents",
type: "stat"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "transparent"
},
{
color: "dark-blue",
value: 1
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 3,
w: 6,
x: 2,
y: 14
},
id: 24,
options: {
colorMode: "background",
graphMode: "none",
justifyMode: "auto",
orientation: "auto",
reduceOptions: {
calcs: [
"lastNotNull"
],
fields: "/^concat$/",
values: false
},
text: {
valueSize: 48
},
textMode: "auto"
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT CONCAT(
  (SELECT
    count(*)
  FROM
    alerts_alert
    LEFT JOIN checks_check on alerts_alert.assigned_check_id = checks_check.id
    LEFT JOIN autotasks_automatedtask on alerts_alert.assigned_task_id = autotasks_automatedtask.id
    INNER JOIN agents_agent ON autotasks_automatedtask.agent_id = agents_agent.id
    OR checks_check.agent_id = agents_agent.id
    OR alerts_alert.agent_id = agents_agent.id
    INNER JOIN clients_site ON agents_agent.site_id = clients_site.id
    INNER JOIN clients_client ON clients_site.client_id = clients_client.id
  WHERE
    clients_client.name IN ($Client)
    AND clients_site.name IN ($Sites)
    AND alerts_alert.severity = 'info'
    AND alerts_alert.resolved = false
  ),
  ' / ',
  (SELECT
    count(*)
  FROM
    alerts_alert
  WHERE
    alerts_alert.severity = 'info'
    AND alerts_alert.resolved = false
  )
)",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Information Alerts",
type: "stat"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "transparent"
},
{
color: "yellow",
value: 1
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 3,
w: 8,
x: 8,
y: 14
},
id: 20,
options: {
colorMode: "background",
graphMode: "none",
justifyMode: "auto",
orientation: "auto",
reduceOptions: {
calcs: [
"lastNotNull"
],
fields: "/^concat$/",
values: false
},
text: {
valueSize: 48
},
textMode: "auto"
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT CONCAT(
  (SELECT
    count(*)
  FROM
    alerts_alert
    LEFT JOIN checks_check on alerts_alert.assigned_check_id = checks_check.id
    LEFT JOIN autotasks_automatedtask on alerts_alert.assigned_task_id = autotasks_automatedtask.id
    INNER JOIN agents_agent ON autotasks_automatedtask.agent_id = agents_agent.id
    OR checks_check.agent_id = agents_agent.id
    OR alerts_alert.agent_id = agents_agent.id
    INNER JOIN clients_site ON agents_agent.site_id = clients_site.id
    INNER JOIN clients_client ON clients_site.client_id = clients_client.id
  WHERE
    clients_client.name IN ($Client)
    AND clients_site.name IN ($Sites)
    AND alerts_alert.severity = 'warning'
    AND alerts_alert.resolved = false
  ),
  ' / ',
  (SELECT
    count(*)
  FROM
    alerts_alert
  WHERE
    alerts_alert.severity = 'warning'
    AND alerts_alert.resolved = false
  )
)",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Warning Alerts",
type: "stat"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "",
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "transparent"
},
{
color: "red",
value: 1
}
]
}
},
overrides: [ ]
},
gridPos: {
h: 3,
w: 8,
x: 16,
y: 14
},
id: 23,
options: {
colorMode: "background",
graphMode: "none",
justifyMode: "auto",
orientation: "auto",
reduceOptions: {
calcs: [
"lastNotNull"
],
fields: "/^concat$/",
values: false
},
text: { },
textMode: "auto"
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT CONCAT(
  (SELECT
    count(*)
  FROM
    alerts_alert
    LEFT JOIN checks_check on alerts_alert.assigned_check_id = checks_check.id
    LEFT JOIN autotasks_automatedtask on alerts_alert.assigned_task_id = autotasks_automatedtask.id
    INNER JOIN agents_agent ON autotasks_automatedtask.agent_id = agents_agent.id
    OR checks_check.agent_id = agents_agent.id
    OR alerts_alert.agent_id = agents_agent.id
    INNER JOIN clients_site ON agents_agent.site_id = clients_site.id
    INNER JOIN clients_client ON clients_site.client_id = clients_client.id
  WHERE
    clients_client.name IN ($Client)
    AND clients_site.name IN ($Sites)
    AND alerts_alert.severity = 'error'
    AND alerts_alert.resolved = false
  ),
  ' / ',
  (SELECT
    count(*)
  FROM
    alerts_alert
  WHERE
    alerts_alert.severity = 'error'
    AND alerts_alert.resolved = false
  )
)",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Error Alerts",
type: "stat"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
custom: {
align: "center",
displayMode: "auto",
inspect: false
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "green"
},
{
color: "red",
value: 80
}
]
},
unit: "none"
},
overrides: [
{
matcher: {
id: "byName",
options: "64 Bit"
},
properties: [
{
id: "custom.width",
value: 149
}
]
}
]
},
gridPos: {
h: 8,
w: 4,
x: 0,
y: 17
},
id: 18,
options: {
footer: {
fields: "",
reducer: [
"sum"
],
show: false
},
showHeader: true,
sortBy: [ ]
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "  select (
SELECT
  count(*)
  FROM agents_agent
Where
  SUBSTRING(agents_agent.operating_system,POSITION(',' in agents_agent.operating_system)+2,2) = '64' and
  site_id IN (SELECT id FROM clients_site WHERE site_id IN (SELECT id FROM clients_site WHERE name IN ($Sites))) and
  site_id IN (SELECT id FROM clients_site WHERE client_id IN (SELECT id FROM clients_client WHERE name IN ($Client)))) as "64 Bit",

  (SELECT
  count(*)
  FROM agents_agent
Where
  SUBSTRING(agents_agent.operating_system,POSITION(',' in agents_agent.operating_system)+2,2) = '32' and
   site_id IN (SELECT id FROM clients_site WHERE site_id IN (SELECT id FROM clients_site WHERE name IN ($Sites))) and
  site_id IN (SELECT id FROM clients_site WHERE client_id IN (SELECT id FROM clients_client WHERE name IN ($Client)))) as "32 Bit" ",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "OS Distribution",
type: "table"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "List all OS installed",
fieldConfig: {
defaults: {
color: {
fixedColor: "semi-dark-green",
mode: "fixed"
},
custom: {
align: "center",
displayMode: "auto",
inspect: false
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "green"
}
]
}
},
overrides: [
{
matcher: {
id: "byName",
options: "Operating System"
},
properties: [
{
id: "custom.width",
value: 293
}
]
}
]
},
gridPos: {
h: 8,
w: 6,
x: 4,
y: 17
},
id: 26,
options: {
footer: {
fields: "",
reducer: [
"sum"
],
show: false
},
showHeader: true,
sortBy: [ ]
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT 
  count(*) as "count",
  SUBSTRING(agents_agent.operating_system,'(.*)(?:,|x86_64)') AS "Operating System"
FROM agents_agent
  INNER JOIN clients_site ON agents_agent.site_id = clients_site.id
  INNER JOIN clients_client ON clients_site.client_id = clients_client.id
WHERE
  clients_client.name IN ($Client)
  AND clients_site.name IN ($Sites)
Group by "Operating System"
Order by "count" desc
  ",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "OS Type",
transformations: [
{
id: "organize",
options: {
excludeByName: { },
indexByName: {
Operating System: 0,
count: 1
},
renameByName: { }
}
}
],
type: "table"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "",
fieldConfig: {
defaults: {
color: {
fixedColor: "semi-dark-green",
mode: "fixed"
},
custom: {
align: "center",
displayMode: "auto",
inspect: false
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "green"
}
]
}
},
overrides: [
{
matcher: {
id: "byName",
options: "CPU Name"
},
properties: [
{
id: "custom.width",
value: 377
}
]
}
]
},
gridPos: {
h: 8,
w: 7,
x: 10,
y: 17
},
id: 54,
options: {
footer: {
fields: "",
reducer: [
"sum"
],
show: false
},
showHeader: true,
sortBy: [ ]
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT 
    count(*) as "count",
    (CASE 
      WHEN wmi_detail->'cpu' IS NOT NULL
      THEN SUBSTRING(agents_agent.wmi_detail->'cpu'->0->0->>'Name','(?:AMD|Intel\(R\)|Intel)(.*)(?:@|Processor|with)')
      ELSE SUBSTRING(agents_agent.wmi_detail->'cpus'->>0,'(?:AMD|Intel\(R\)|Intel)(.*)(?:@|Processor|with)')
    END) as "CPU Name"
FROM agents_agent
    INNER JOIN clients_site ON agents_agent.site_id = clients_site.id
    INNER JOIN clients_client ON clients_site.client_id = clients_client.id
WHERE
  clients_client.name IN ($Client)
  AND clients_site.name IN ($Sites)
Group by "CPU Name"
Order by "count" desc",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Type of CPUs",
transformations: [
{
id: "organize",
options: {
excludeByName: { },
indexByName: {
CPU Name: 0,
count: 1
},
renameByName: { }
}
}
],
type: "table"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "List all installed memory",
fieldConfig: {
defaults: {
color: {
fixedColor: "semi-dark-green",
mode: "fixed"
},
custom: {
align: "center",
displayMode: "auto",
inspect: false
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "green"
}
]
}
},
overrides: [
{
matcher: {
id: "byName",
options: "Size Memory"
},
properties: [
{
id: "custom.width",
value: 377
}
]
}
]
},
gridPos: {
h: 8,
w: 7,
x: 17,
y: 17
},
id: 55,
options: {
footer: {
fields: "",
reducer: [
"sum"
],
show: false
},
showHeader: true
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "  SELECT 
  count(*) as "count",
  concat((total_ram),' GB') as "Size Memory"
  FROM agents_agent
INNER JOIN clients_site on site_id = clients_site.id
WHERE site_id IN (SELECT id FROM clients_site WHERE client_id IN (SELECT id FROM clients_client WHERE name IN ($Client)))
AND site_id IN (SELECT id FROM clients_site WHERE site_id IN (SELECT id FROM clients_site WHERE name IN ($Sites)))
Group by "Size Memory"
Order by "count" desc
  ",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Installed System RAM",
transformations: [
{
id: "organize",
options: {
excludeByName: { },
indexByName: {
Size Memory: 0,
count: 1
},
renameByName: { }
}
}
],
type: "table"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
description: "",
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
custom: {
align: "center",
displayMode: "color-background-solid",
inspect: false
},
mappings: [
{
options: {
Offline: {
color: "red",
index: 1,
text: "X"
},
Online: {
color: "green",
index: 0,
text: "O"
}
},
type: "value"
}
],
thresholds: {
mode: "absolute",
steps: [
{
color: "transparent"
}
]
}
},
overrides: [
{
matcher: {
id: "byName",
options: "Site"
},
properties: [
{
id: "custom.width",
value: 125
}
]
},
{
matcher: {
id: "byName",
options: "Last Reboot"
},
properties: [
{
id: "custom.width",
value: 195
}
]
},
{
matcher: {
id: "byName",
options: "Last Response"
},
properties: [
{
id: "custom.width",
value: 195
}
]
},
{
matcher: {
id: "byName",
options: "Hostname"
},
properties: [
{
id: "custom.width",
value: 135
}
]
},
{
matcher: {
id: "byName",
options: "agent_id"
},
properties: [
{
id: "custom.hidden",
value: true
}
]
},
{
matcher: {
id: "byName",
options: "RMM"
},
properties: [
{
id: "custom.width",
value: 50
},
{
id: "links",
value: [
{
targetBlank: true,
title: "Open RMM",
url: "https://${TacticalURL}/agents/${__data.fields.agent_id}"
}
]
},
{
id: "custom.displayMode",
value: "image"
}
]
},
{
matcher: {
id: "byName",
options: "Stats"
},
properties: [
{
id: "custom.width",
value: 50
},
{
id: "custom.displayMode",
value: "image"
},
{
id: "links",
value: [
{
targetBlank: false,
title: "Agent Dashboard",
url: "https://${GrafanaURL}/d/pLkA1-inz/t-rmm-agent-dashboard?orgId=1&var-Agent=${__data.fields.Hostname}﻿&var-Sites=﻿${__data.fields.Site}"
}
]
}
]
},
{
matcher: {
id: "byName",
options: "Status"
},
properties: [
{
id: "custom.width",
value: 87
}
]
}
]
},
gridPos: {
h: 13,
w: 11,
x: 0,
y: 25
},
id: 14,
options: {
footer: {
fields: "",
reducer: [
"sum"
],
show: false
},
showHeader: true,
sortBy: [ ]
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT 
  clients_site.name AS "Site",
  hostname AS "Hostname",
  agents_agent.agent_id,
  'https://docs.tacticalrmm.com/images/favicon.ico' as "RMM",
  'https://grafana.com/static/assets/img/fav32.png' as "Stats",
  (
        CASE
            WHEN last_seen > NOW() - interval '1 minute' THEN 'Online'
            ELSE 'Offline'
        END
    ) AS "Status",
  last_seen as "Last Response",
  to_timestamp(boot_time) AS "Last Reboot"
FROM agents_agent
    INNER JOIN clients_site ON agents_agent.site_id = clients_site.id
    INNER JOIN clients_client ON clients_site.client_id = clients_client.id
WHERE
    clients_client.name IN ($Client)
    AND clients_site.name IN ($Sites)",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Agent Status",
type: "table"
},
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
fieldConfig: {
defaults: {
color: {
mode: "thresholds"
},
custom: {
align: "auto",
displayMode: "auto",
inspect: false
},
mappings: [ ],
thresholds: {
mode: "absolute",
steps: [
{
color: "green"
},
{
color: "red",
value: 80
}
]
}
},
overrides: [
{
matcher: {
id: "byName",
options: "Date"
},
properties: [
{
id: "custom.width",
value: 155
}
]
},
{
matcher: {
id: "byName",
options: "agent_id"
},
properties: [
{
id: "custom.hidden",
value: true
}
]
},
{
matcher: {
id: "byName",
options: "RMM"
},
properties: [
{
id: "custom.width",
value: 45
},
{
id: "links",
value: [
{
targetBlank: true,
title: "Open RMM",
url: "https://${TacticalURL}/agents/${__data.fields.agent_id}"
}
]
},
{
id: "custom.displayMode",
value: "image"
}
]
},
{
matcher: {
id: "byName",
options: "Message"
},
properties: [
{
id: "custom.width",
value: 787
}
]
}
]
},
gridPos: {
h: 13,
w: 13,
x: 11,
y: 25
},
id: 33,
options: {
footer: {
fields: "",
reducer: [
"sum"
],
show: false
},
showHeader: true,
sortBy: [ ]
},
pluginVersion: "9.0.0-beta2",
targets: [
{
datasource: {
type: "postgres",
uid: "${Tactical}"
},
format: "table",
group: [ ],
metricColumn: "none",
rawQuery: true,
rawSql: "SELECT 
    alerts_alert.alert_time as "Date",
    alerts_alert.message as "Message",
    agents_agent.agent_id,
    'https://docs.tacticalrmm.com/images/favicon.ico' as "RMM"
FROM alerts_alert
    LEFT JOIN checks_check on alerts_alert.assigned_check_id = checks_check.id
    LEFT JOIN autotasks_automatedtask on alerts_alert.assigned_task_id = autotasks_automatedtask.id
    INNER JOIN agents_agent ON autotasks_automatedtask.agent_id = agents_agent.id
                            OR checks_check.agent_id = agents_agent.id
                            OR alerts_alert.agent_id = agents_agent.id
    INNER JOIN clients_site ON agents_agent.site_id = clients_site.id
    INNER JOIN clients_client ON clients_site.client_id = clients_client.id
WHERE
  clients_client.name IN ($Client)
  AND clients_site.name IN ($Sites)
  AND alerts_alert.severity = 'error' 
  AND alerts_alert.resolved = false",
refId: "A",
select: [
[
{
params: [
"boot_time"
],
type: "column"
}
]
],
table: "agents_agent",
timeColumn: "last_seen",
timeColumnType: "timestamp",
where: [
{
name: "$__timeFilter",
params: [ ],
type: "macro"
}
]
}
],
title: "Error Messages",
type: "table"
}
],
refresh: "",
schemaVersion: 36,
style: "dark",
tags: [
"TRMMAgentDashboard"
],
templating: {
list: [
{
current: {
selected: false,
text: "All",
value: "$__all"
},
datasource: {
type: "postgres",
uid: "${Tactical}"
},
definition: "SELECT name FROM clients_client",
hide: 0,
includeAll: true,
label: "Client",
multi: false,
name: "Client",
options: [ ],
query: "SELECT name FROM clients_client",
refresh: 1,
regex: "",
skipUrlSync: false,
sort: 1,
tagValuesQuery: "",
tagsQuery: "",
type: "query",
useTags: false
},
{
current: {
selected: false,
text: "All",
value: "$__all"
},
datasource: {
type: "postgres",
uid: "${Tactical}"
},
definition: "SELECT
    clients_site.name
FROM
    clients_site
    INNER JOIN clients_client ON clients_site.client_id = clients_client.id
WHERE
    clients_client.name IN ($Client)",
hide: 0,
includeAll: true,
label: "Site",
multi: false,
name: "Sites",
options: [ ],
query: "SELECT
    clients_site.name
FROM
    clients_site
    INNER JOIN clients_client ON clients_site.client_id = clients_client.id
WHERE
    clients_client.name IN ($Client)",
refresh: 1,
regex: "",
skipUrlSync: false,
sort: 1,
type: "query"
},
{
current: {
selected: false,
text: "ATC-LT-10(Arctic Traveler/Main)",
value: "dulQBYmodXIpCduOHJIPJFdYASHkpGSqJijBAXLK"
},
datasource: {
type: "postgres",
uid: "${Tactical}"
},
definition: "SELECT
    agents_agent.hostname || '(' || clients_client.name || '/' || clients_site.name || ')' AS __text,
    agents_agent.agent_id AS __value
FROM
    agents_agent
    INNER JOIN clients_site ON agents_agent.site_id = clients_site.id
    INNER JOIN clients_client ON clients_site.client_id = clients_client.id
WHERE
    clients_client.name IN ($Client)
    AND clients_site.name IN ($Sites)",
hide: 0,
includeAll: false,
label: "Agent",
multi: false,
name: "Agent",
options: [ ],
query: "SELECT
    agents_agent.hostname || '(' || clients_client.name || '/' || clients_site.name || ')' AS __text,
    agents_agent.agent_id AS __value
FROM
    agents_agent
    INNER JOIN clients_site ON agents_agent.site_id = clients_site.id
    INNER JOIN clients_client ON clients_site.client_id = clients_client.id
WHERE
    clients_client.name IN ($Client)
    AND clients_site.name IN ($Sites)",
refresh: 1,
regex: "",
skipUrlSync: false,
sort: 1,
type: "query"
},
{
current: {
selected: false,
text: "TacticalRMM",
value: "TacticalRMM"
},
hide: 2,
includeAll: false,
multi: false,
name: "Tactical",
options: [ ],
query: "postgres",
refresh: 1,
regex: "TacticalRMM",
skipUrlSync: false,
type: "datasource"
},
{
current: {
selected: false,
text: "rmm.example.com",
value: "rmm.example.com"
},
hide: 0,
includeAll: false,
multi: false,
name: "TacticalURL",
options: [
{
selected: true,
text: "rmm.example.com",
value: "rmm.example.com"
}
],
query: "rmm.example.com",
queryValue: "",
skipUrlSync: false,
type: "custom"
},
{
current: {
selected: false,
text: "grafana.example.com",
value: "grafana.example.com"
},
hide: 0,
includeAll: false,
multi: false,
name: "GrafanaURL",
options: [
{
selected: true,
text: "grafana.example.com",
value: "grafana.example.com"
}
],
query: "grafana.example.com",
skipUrlSync: false,
type: "custom"
}
]
},
time: {
from: "now-12h",
to: "now"
},
timepicker: {
hidden: false
},
timezone: "",
title: "T-RMM Agent Dashboard",
uid: "pLkA1-inz",
version: 9,
weekStart: ""
}
